diff --git a/src/main/java/com/epeters/raytrace/Camera.java b/src/main/java/com/epeters/raytrace/Camera.java
index 886739d..9907177 100644
--- a/src/main/java/com/epeters/raytrace/Camera.java
+++ b/src/main/java/com/epeters/raytrace/Camera.java
@@ -1,5 +1,6 @@
 package com.epeters.raytrace;
 
+import com.epeters.raytrace.utils.Mector;
 import com.epeters.raytrace.utils.Vector;
 
 import static java.lang.Math.tan;
@@ -10,7 +11,7 @@ import static com.epeters.raytrace.utils.Utils.randomVectorInUnitDisc;
  * Represents the camera in the scene. Knows its position and dimensional details,
  * and how to calculate a ray through the focal image.
  */
-public class Camera {
+public final class Camera {
 
     private final double lensRadius;
     public final Vector origin;
@@ -41,17 +42,20 @@ public class Camera {
     }
 
     public Ray computeRay(double s, double t) {
-        Vector origin = this.origin;
-        Vector direction = lowerLeft
-                .plus(horizontal.mul(s))
-                .plus(vertical.mul(t))
+        Mector o = new Mector(origin);
+        Mector d = new Mector(lowerLeft)
+                .plusTimes(horizontal, s)
+                .plusTimes(vertical, t)
                 .minus(origin);
         if (lensRadius > 0.0) {
             Vector rando = randomVectorInUnitDisc().mul(lensRadius);
-            Vector offset = u.mul(rando.x()).plus(v.mul(rando.y()));
-            origin = origin.plus(offset);
-            direction = direction.minus(offset);
+            Vector f = new Mector()
+                    .plusTimes(u, rando.x())
+                    .plusTimes(v, rando.y())
+                    .toVector();
+            o.plus(f);
+            d.minus(f);
         }
-        return new Ray(origin, direction);
+        return new Ray(o.toVector(), d.toVector());
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/Main.java b/src/main/java/com/epeters/raytrace/Main.java
index 5eaf988..70c09a2 100644
--- a/src/main/java/com/epeters/raytrace/Main.java
+++ b/src/main/java/com/epeters/raytrace/Main.java
@@ -7,12 +7,12 @@ public class Main {
 
     public static void main(String [] args) {
 
-        SceneConfig config = Scenes.redBox();
-        config.imageWidth = 1400;
-        config.samplesPerPixel = 500;
-        config.bouncesPerPixel = 50;
+        SceneConfig config = Scenes.fuzzyThreeBalls();
+        config.imageWidth = 600;
+        config.samplesPerPixel = 10;
+        config.bouncesPerPixel = 10;
 
-        int threads = Runtime.getRuntime().availableProcessors() - 1;
+        int threads = 14; // Runtime.getRuntime().availableProcessors() - 1;
         String path = System.getProperty("user.home") + "/Desktop/trace.png";
 
         Tracer tracer = new Tracer(config);
diff --git a/src/main/java/com/epeters/raytrace/Ray.java b/src/main/java/com/epeters/raytrace/Ray.java
index 1321926..7601cc0 100644
--- a/src/main/java/com/epeters/raytrace/Ray.java
+++ b/src/main/java/com/epeters/raytrace/Ray.java
@@ -1,5 +1,6 @@
 package com.epeters.raytrace;
 
+import com.epeters.raytrace.utils.Mector;
 import com.epeters.raytrace.utils.Vector;
 
 import static com.epeters.raytrace.utils.Vector.ORIGIN;
@@ -24,6 +25,6 @@ public record Ray(Vector origin, Vector direction) {
     }
 
     public Vector at(double t) {
-        return origin.plus(direction.mul(t));
+        return new Mector(origin).plusTimes(direction, t).toVector();
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/Scatter.java b/src/main/java/com/epeters/raytrace/Scatter.java
deleted file mode 100644
index c2f1a7c..0000000
--- a/src/main/java/com/epeters/raytrace/Scatter.java
+++ /dev/null
@@ -1,11 +0,0 @@
-package com.epeters.raytrace;
-
-import com.epeters.raytrace.utils.Vector;
-
-/**
- * Captures the two important facets of light scattering
- * @param attenuation the color attenuation (darker means light is absorbed)
- * @param direction the direction of the scatter
- */
-public record Scatter(Vector attenuation, Vector direction) {
-}
diff --git a/src/main/java/com/epeters/raytrace/SceneConfig.java b/src/main/java/com/epeters/raytrace/SceneConfig.java
index 80a58fe..38577d3 100644
--- a/src/main/java/com/epeters/raytrace/SceneConfig.java
+++ b/src/main/java/com/epeters/raytrace/SceneConfig.java
@@ -1,19 +1,18 @@
 package com.epeters.raytrace;
 
-import com.epeters.raytrace.hittables.HitDetails;
+import com.epeters.raytrace.hittables.Hittable;
 import com.epeters.raytrace.solids.Solid;
 import com.epeters.raytrace.utils.Vector;
 
 import java.util.ArrayList;
 import java.util.function.Function;
-import java.util.function.Supplier;
 
 import static com.epeters.raytrace.utils.Utils.SKY_BLUE;
 import static com.epeters.raytrace.utils.Utils.WHITE;
 import static com.epeters.raytrace.utils.Vector.ORIGIN;
 import static com.epeters.raytrace.utils.Vector.vec;
 
-public class SceneConfig extends ArrayList<Solid> {
+public class SceneConfig extends ArrayList<Hittable> {
 
     public Vector position = ORIGIN;
     public Vector target = vec(0.0, 0.0, -1.0);
@@ -24,8 +23,7 @@ public class SceneConfig extends ArrayList<Solid> {
     public int imageWidth = 600;
     public int samplesPerPixel = 100;
     public int bouncesPerPixel = 10;
-    public boolean useBoundingVolume = false;
-    public Function<HitDetails,Vector> defaultColor = (h) -> h.normal().plus(WHITE).mul(0.5);
+    public Vector defaultColor;
     public Function<Ray,Vector> backgroundColor = (r) -> {
         double t = 0.5f * (r.direction().normalize().y() + 1.0);
         return WHITE.mul(1.0 - t).plus(SKY_BLUE.mul(t));
diff --git a/src/main/java/com/epeters/raytrace/Scenes.java b/src/main/java/com/epeters/raytrace/Scenes.java
index ab72996..6c95c96 100644
--- a/src/main/java/com/epeters/raytrace/Scenes.java
+++ b/src/main/java/com/epeters/raytrace/Scenes.java
@@ -1,20 +1,34 @@
 package com.epeters.raytrace;
 
-import com.epeters.raytrace.materials.LightedMaterial;
+import com.epeters.raytrace.hittables.BoundingVolume;
+import com.epeters.raytrace.hittables.Hittable;
 import com.epeters.raytrace.materials.Material;
-import com.epeters.raytrace.solids.XYRectangle;
+import com.epeters.raytrace.solids.Solid;
 import com.epeters.raytrace.textures.CheckeredTexture;
-import com.epeters.raytrace.textures.ImageTexture;
 import com.epeters.raytrace.textures.Texture;
 import com.epeters.raytrace.utils.Vector;
 
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.epeters.raytrace.hittables.Hittable.rotateY;
+import static com.epeters.raytrace.hittables.Hittable.translate;
 import static com.epeters.raytrace.materials.Material.light;
-import static com.epeters.raytrace.solids.Solid.rect;
+import static com.epeters.raytrace.solids.Solid.box;
+import static com.epeters.raytrace.solids.Solid.fog;
+import static com.epeters.raytrace.solids.Solid.rectXY;
+import static com.epeters.raytrace.solids.Solid.rectXZ;
+import static com.epeters.raytrace.solids.Solid.rectYZ;
+import static com.epeters.raytrace.textures.Texture.checker;
+import static com.epeters.raytrace.textures.Texture.image;
+import static com.epeters.raytrace.textures.Texture.noise;
+import static com.epeters.raytrace.textures.Texture.solid;
+import static com.epeters.raytrace.utils.Utils.BLACK;
 import static com.epeters.raytrace.utils.Utils.DARK_GREEN;
-import static com.epeters.raytrace.utils.Utils.DARK_PINK;
 import static com.epeters.raytrace.utils.Utils.MID_GRAY;
 import static com.epeters.raytrace.utils.Utils.WHITE;
 import static com.epeters.raytrace.utils.Utils.random;
+import static com.epeters.raytrace.utils.Utils.randomVector;
 import static com.epeters.raytrace.utils.Utils.randomVectorInUnitCube;
 import static com.epeters.raytrace.utils.Vector.ORIGIN;
 import static com.epeters.raytrace.utils.Vector.vec;
@@ -24,11 +38,18 @@ import static com.epeters.raytrace.materials.Material.lambertian;
 import static com.epeters.raytrace.materials.Material.metal;
 import static com.epeters.raytrace.materials.Material.dialectric;
 import static com.epeters.raytrace.solids.Solid.sphere;
+import static com.epeters.raytrace.textures.Texture.turbulence;
 import static java.lang.Math.PI;
 import static java.lang.Math.cos;
 
 public class Scenes {
 
+    public static final Material M_MID_GRAY = lambertian(MID_GRAY);
+    public static final Material M_RED = lambertian(RED);
+    public static final Material M_BLUE = lambertian(BLUE);
+    public static final Material M_NOISE = lambertian(turbulence(WHITE, 4.0, 7));
+    public static final Material M_LIGHT = light(vec(4.0, 4.0, 4.0));
+
     // ====================================================================================
     // two balls
     // ====================================================================================
@@ -36,27 +57,99 @@ public class Scenes {
     public static SceneConfig twoGrayBalls() {
 
         SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(0.0, 0.0, -1.0), 0.5, lambertian(MID_GRAY)));
-        config.add(sphere(vec(0.0, -100.5, -1.0), 100.0, lambertian(MID_GRAY)));
+        config.add(sphere(vec(0.0, 0.0, -1.0), 0.5, M_MID_GRAY));
+        config.add(sphere(vec(0.0, -100.5, -1.0), 100.0, M_MID_GRAY));
         return config;
     }
 
-    public static SceneConfig redBox() {
-
-        Texture noise = Texture.turbulence(WHITE, 4.0, 7);
-        Texture earth = new ImageTexture("/earth.jpg");
+    // ====================================================================================
+    // lights
+    // ====================================================================================
 
+    public static SceneConfig lightedMarble() {
         SceneConfig config = new SceneConfig();
-        config.add(rect(-1.0, -1.0, 1.0, 1.0, -3.0, light(vec(6.0, 6.0, 6.0))));
-        config.add(sphere(vec(0.0, 2.0, 1.0), 2.0, lambertian(earth)));
-        config.add(sphere(vec(0.0, -100.5, 1.0), 100.0, lambertian(MID_GRAY)));
-        config.position = vec(11.0, 2.0, 2.0);
-        config.target = ORIGIN;
+        config.add(rectXY(1.0, 1.0, 3.0, 3.0, -4.0, M_LIGHT));
+        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, M_NOISE));
+        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, M_NOISE));
+        config.position = vec(26.0, 3.0, 6.0);
+        config.target = vec(0.0, 2.0, 0.0);
         config.fieldOfView = 20.0;
         config.backgroundColor = (r) -> ORIGIN;
         return config;
     }
 
+    // ====================================================================================
+    // boxes
+    // ====================================================================================
+
+    public static SceneConfig grayBox() {
+
+        SceneConfig config = new SceneConfig();
+
+        Hittable box = box(vec(-1.0, -1.0, -3.0), vec(1.0, 1.0, -4.0), M_MID_GRAY);
+        box = rotateY(box, 45.0);
+
+        config.add(box);
+        config.position = vec(2.0, 2.0, 0.0);
+        config.target = vec(0.0, 0.0, -3.5);
+        return config;
+    }
+
+    public static SceneConfig cornellBox() {
+
+        Material red = lambertian(solid(vec(0.65, 0.05, 0.05)));
+        Material white = lambertian(solid(vec(0.73, 0.73, 0.73)));
+        Material green = lambertian(solid(vec(0.12, 0.45, 0.15)));
+        Material light = light(vec(15.0, 15.0, 15.0));
+
+        SceneConfig config = new SceneConfig();
+        config.add(rectYZ(0.0, 0.0, 555.0, 555.0, 555.0, green));
+        config.add(rectYZ(0.0, 0.0, 555.0, 555.0, 0.0, red));
+        config.add(rectXZ(0.0, 0.0, 555.0, 555.0, 0.0, white));
+        config.add(rectXZ(0.0, 0.0, 555.0, 555.0, 555.0, white));
+        config.add(rectXY(0.0, 0, 555.0, 555.0, 555.0, white));
+        config.add(rectXZ(200.0, 150.0, 355.0, 305.0, 554.0, light));
+        config.aspectRatio = 1.0;
+        config.position = vec(278.0, 278.0, -800.0);
+        config.target = vec(278.0, 278.0, 0.0);
+        config.fieldOfView = 40.0;
+        config.backgroundColor = (r) -> BLACK;
+        return config;
+    }
+
+    public static SceneConfig cornellBoxWithObjects() {
+
+        Material red = lambertian(solid(vec(0.65, 0.05, 0.05)));
+        Material white = lambertian(solid(vec(0.73, 0.73, 0.73)));
+        Material green = lambertian(solid(vec(0.12, 0.45, 0.15)));
+        Material light = light(vec(15.0, 15.0, 15.0));
+
+        SceneConfig config = new SceneConfig();
+
+        Hittable box1 = box(vec(0, 0.0, 0), vec(165.0, 330.0, 165.0), white);
+        box1 = rotateY(box1, 15.0);
+        box1 = translate(box1, vec(265.0, 0.0, 295.0));
+        config.add(fog(box1, 0.01, BLACK));
+
+        Hittable box2 = box(vec(0, 0.0, 0), vec(165.0, 165.0, 165.0), white);
+        box2 = rotateY(box2, -18.0);
+        box2 = translate(box2, vec(130.0, 0.0, 65.0));
+        config.add(fog(box2, 0.01, WHITE));
+
+        config.add(rectYZ(0.0, 0.0, 555.0, 555.0, 555.0, green));
+        config.add(rectYZ(0.0, 0.0, 555.0, 555.0, 0.0, red));
+        config.add(rectXZ(0.0, 0.0, 555.0, 555.0, 0.0, white));
+        config.add(rectXZ(0.0, 0.0, 555.0, 555.0, 555.0, white));
+        config.add(rectXY(0.0, 0, 555.0, 555.0, 555.0, white));
+        config.add(rectXZ(200.0, 150.0, 355.0, 305.0, 554.0, light));
+        config.aspectRatio = 1.0;
+        config.position = vec(278.0, 278.0, -800.0);
+        config.target = vec(278.0, 278.0, 0.0);
+        config.fieldOfView = 40.0;
+        config.backgroundColor = (r) -> BLACK;
+        return config;
+    }
+
     // ====================================================================================
     // three balls
     // ====================================================================================
@@ -116,8 +209,8 @@ public class Scenes {
         double r = cos(PI / 4.0);
 
         SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(-r, 0.0, -1.0), r, lambertian(BLUE)));
-        config.add(sphere(vec(r, 0.0, -1.0), r, lambertian(RED)));
+        config.add(sphere(vec(-r, 0.0, -1.0), r, M_BLUE));
+        config.add(sphere(vec(r, 0.0, -1.0), r, M_RED));
         config.fieldOfView = 90.0;
         config.aspectRatio = 3.0 / 2.0;
         return config;
@@ -128,12 +221,10 @@ public class Scenes {
     // ====================================================================================
 
     public static SceneConfig closeupCheckeredSpheres() {
-
-        Texture checker = Texture.checker(WHITE, DARK_GREEN);
-
+        Material checks = lambertian(checker(WHITE, DARK_GREEN));
         SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(0.0, -10.0, 0.0), 10.0, lambertian(checker)));
-        config.add(sphere(vec(0.0, 10.0, 0.0), 10.0, lambertian(checker)));
+        config.add(sphere(vec(0.0, -10.0, 0.0), 10.0, checks));
+        config.add(sphere(vec(0.0, 10.0, 0.0), 10.0, checks));
         config.position = vec(13.0, 2.0, 3.0);
         config.target = vec(0.0, 0.0, 0.0);
         config.fieldOfView = 20.0;
@@ -145,12 +236,9 @@ public class Scenes {
     // ====================================================================================
 
     public static SceneConfig noisySphere() {
-
-        Texture noise = Texture.noise(WHITE, 4.0);
-
         SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, lambertian(noise)));
-        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, lambertian(noise)));
+        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, M_NOISE));
+        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, M_NOISE));
         config.position = vec(13,2,3);
         config.target = vec(0,0,0);
         config.fieldOfView = 20.0;
@@ -158,64 +246,29 @@ public class Scenes {
     }
 
     public static SceneConfig marbleSphere() {
-
-        Texture noise = Texture.turbulence(WHITE, 4.0, 7);
-
+        Material marble = lambertian(turbulence(WHITE, 4.0, 7));
         SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, lambertian(noise)));
-        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, lambertian(noise)));
+        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, marble));
+        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, marble));
         config.position = vec(13,2,3);
         config.target = vec(0,0,0);
         config.fieldOfView = 20.0;
         return config;
     }
 
-    public static SceneConfig litMarble() {
-
-        Texture noise = Texture.turbulence(WHITE, 4.0, 7);
-
-        SceneConfig config = new SceneConfig();
-        config.add(rect(3, 5, 1, 3, -2, lambertian(RED))); // light(vec(4.0, 4.0, 4.0))));
-        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, lambertian(noise)));
-//        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, lambertian(noise)));
-        config.position = vec(26,3,6);
-        config.target = vec(3,5,1);
-        config.fieldOfView = 20.0;
-//        config.backgroundColor = (r) -> ORIGIN;
-        return config;
-    }
-
     // ====================================================================================
     // image textures
     // ====================================================================================
 
     public static SceneConfig earth() {
-
-        Texture earth = new ImageTexture("/earth.jpg");
-
         SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(0.0, 0.0, 0.0), 2.0, lambertian(earth)));
+        config.add(sphere(vec(0.0, 0.0, 0.0), 2.0, lambertian(image("/earth.jpg"))));
         config.position = vec(13,2,3);
         config.target = vec(0,0,0);
         config.fieldOfView = 20.0;
         return config;
     }
 
-    public static SceneConfig lightedScene() {
-
-        Texture noise = Texture.turbulence(WHITE, 4.0, 7);
-
-        SceneConfig config = new SceneConfig();
-        config.add(sphere(vec(0.0, -1000.0, 0.0), 1000.0, lambertian(noise)));
-        config.add(sphere(vec(0.0, 2.0, 0.0), 2.0, lambertian(noise)));
-        config.add(new XYRectangle(light(vec(4.0, 4.0, 4.0)), 3.0, 5.0, 1.0, 3.0, -2.0));
-        config.position = vec(26.0, 3.0, 6.0);
-        config.target = vec(0.0,2.0,0.0);
-        config.fieldOfView = 20.0;
-        config.backgroundColor = (h) -> ORIGIN;
-        return config;
-    }
-
     // ====================================================================================
     // random world
     // ====================================================================================
@@ -259,9 +312,69 @@ public class Scenes {
         config.position = vec(13.0, 2.0, 3.0);
         config.target = ORIGIN;
         config.up = vec(0.0, 1.0, 0.0);
-        config.useBoundingVolume = true;
         config.aspectRatio = 3.0 / 2.0;
         return config;
     }
 
+    // ====================================================================================
+    // finale
+    // ====================================================================================
+
+    public static SceneConfig finale() {
+
+        SceneConfig config = new SceneConfig();
+
+        Material light = light(vec(7.0, 7.0, 7.0));
+        config.add(rectXZ(100, 220, 300, 420, 550, light));
+
+        List<Hittable> boxes = new ArrayList<>();
+        Material ground = lambertian(vec(0.48, 0.83, 0.53));
+        for (int i = 0; i < 20; i++) {
+            for (int j = 0; j < 20; j++) {
+
+                double w = 100.0;
+
+                double x0 = -1000.0 + i * w;
+                double y0 = 0.0;
+                double z0 = -1000.0 + j * w;
+
+                double x1 = x0 + w;
+                double y1 = random(1.0, 101.0);
+                double z1 = z0 + w;
+
+                config.add(box(vec(x0, y0, z0), vec(x1, y1, z1), ground));
+            }
+        }
+
+        config.add(sphere(vec(400, 400, 200), 50, lambertian(vec(0.7, 0.3, 0.1))));
+        config.add(sphere(vec(260, 150, 45), 50, dialectric(1.5)));
+        config.add(sphere(vec(0, 150, 145), 50, metal(vec(0.8, 0.8, 0.9), 1.0)));
+        config.add(sphere(vec(400, 200, 400), 100, lambertian(image("/earth.jpg"))));
+        config.add(sphere(vec(220, 280, 300), 80, lambertian(noise(WHITE, 0.1))));
+
+        Solid b1 = sphere(vec(360, 150, 145), 70, dialectric(1.5));
+        config.add(b1);
+        config.add(fog(b1, 0.2, vec(0.2, 0.4, 0.9)));
+//
+//        Solid b2 = sphere(vec(0, 0, 0), 5000, dialectric(1.5));
+//        config.add(fog(b2, 0.0001, WHITE));
+
+        Material offwhite = lambertian(vec(0.73, 0.73, 0.73));
+        List<Solid> boxes2 = new ArrayList<>();
+        for (int i = 0; i < 1000; i++) {
+            boxes2.add(sphere(randomVector(0, 165), 10, offwhite));
+        }
+        Hittable list = BoundingVolume.from(boxes2);
+        list = translate(list, vec(-100, 270, 395));
+        list = rotateY(list, 15);
+        config.add(list);
+
+        config.aspectRatio = 16.0 / 9.0;
+        config.backgroundColor = (r) -> BLACK;
+        config.position = vec(478, 300, -600);
+        config.target = vec(278, 278, 0);
+        config.fieldOfView = 40.0;
+
+        return config;
+    }
 }
diff --git a/src/main/java/com/epeters/raytrace/Tracer.java b/src/main/java/com/epeters/raytrace/Tracer.java
index d222d23..5be6238 100644
--- a/src/main/java/com/epeters/raytrace/Tracer.java
+++ b/src/main/java/com/epeters/raytrace/Tracer.java
@@ -2,10 +2,8 @@ package com.epeters.raytrace;
 
 import com.epeters.raytrace.hittables.BoundingVolume;
 import com.epeters.raytrace.hittables.Hit;
-import com.epeters.raytrace.hittables.HitDetails;
+import com.epeters.raytrace.hittables.HitColor;
 import com.epeters.raytrace.hittables.Hittable;
-import com.epeters.raytrace.hittables.HittableList;
-import com.epeters.raytrace.materials.Material;
 import com.epeters.raytrace.utils.Vector;
 
 import java.util.function.Function;
@@ -13,10 +11,9 @@ import java.util.function.Function;
 import static com.epeters.raytrace.utils.Utils.BLACK;
 import static com.epeters.raytrace.utils.Utils.random;
 import static com.epeters.raytrace.utils.Utils.sqrt;
-import static com.epeters.raytrace.utils.Vector.ORIGIN;
 import static com.epeters.raytrace.utils.Vector.vec;
 
-public class Tracer {
+public final class Tracer {
 
     private final int samplesPerPixel;
     private final int bouncesPerPixel;
@@ -26,14 +23,14 @@ public class Tracer {
     private final int imageWidth;
     private final int imageHeight;
     private final Function<Ray,Vector> backgroundColor;
-    private final Function<HitDetails,Vector> defaultColor;
+    private final Vector defaultColor;
 
     public Tracer(SceneConfig config) {
         this.samplesPerPixel = config.samplesPerPixel;
         this.bouncesPerPixel = config.bouncesPerPixel;
         this.sampleScale = 1.0 / samplesPerPixel;
         this.camera = new Camera(config);
-        this.world = config.useBoundingVolume ? BoundingVolume.from(config) : new HittableList(config);
+        this.world = BoundingVolume.from(config);
         this.imageWidth = config.imageWidth;
         this.imageHeight = (int)(imageWidth / config.aspectRatio);
         this.backgroundColor = config.backgroundColor;
@@ -88,28 +85,11 @@ public class Tracer {
         }
 
         // if we do have a hit, let's find out more
-        HitDetails details = hit.solid().computeHitDetails(hit);
-
-        // if there is no material, we'll just compute a default color
-        Material material = details.solid().getMaterial();
-        if (material == null) {
-            return defaultColor.apply(details);
-        }
-
-        // if there is a material, we'll use it to compute onward lighting info
-        Vector emission = material.computeEmission(details);
-        Vector attenuation = material.computeAttenuation(details);
-        Vector bounce = material.computeBounce(details);
-
-        Vector result = ORIGIN;
-        if (emission != null) {
-            result = result.plus(emission);
-        }
-        if (attenuation != null && bounce != null) {
-            Ray bounceRay = new Ray(details.point(), bounce);
-            Vector bounceColor = computeColor(bounceRay, bouncesRemaining - 1);
-            result = result.plus(attenuation.mul(bounceColor));
-        }
-        return result;
+        Vector point = hit.ray().at(hit.t());
+        Vector incoming = hit.ray().direction();
+        HitColor color = hit.color().apply(point, incoming);
+        return color == null
+                ? defaultColor
+                : color.combine(bounce -> computeColor(new Ray(point, bounce), bouncesRemaining-1));
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/hittables/BoundingBox.java b/src/main/java/com/epeters/raytrace/hittables/BoundingBox.java
index 71bf05d..6a8ed35 100644
--- a/src/main/java/com/epeters/raytrace/hittables/BoundingBox.java
+++ b/src/main/java/com/epeters/raytrace/hittables/BoundingBox.java
@@ -12,14 +12,14 @@ import java.util.List;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#boundingvolumehierarchies/axis-alignedboundingboxes(aabbs)">guide</a>
  */
-public class BoundingBox {
+public final class BoundingBox {
 
     private final Vector min;
     private final Vector max;
 
     public BoundingBox(Vector min, Vector max) {
-        this.min = min;
-        this.max = max;
+        this.min = min.minWith(max);
+        this.max = max.maxWith(min);
     }
 
     public Vector getMin() {
@@ -30,18 +30,7 @@ public class BoundingBox {
         return max;
     }
 
-    public BoundingBox(List<BoundingBox> boxes) {
-        Vector currMin = boxes.get(0).min;
-        Vector currMax = boxes.get(0).max;
-        for (int i=1; i<boxes.size(); i++) {
-            currMin = currMin.minWith(boxes.get(i).min);
-            currMax = currMax.maxWith(boxes.get(i).max);
-        }
-        this.min = currMin;
-        this.max = currMax;
-    }
-
-    public boolean hit(Ray ray, double tmin, double tmax) {
+    public boolean intersects(Ray ray, double tmin, double tmax) {
         for (int a=0; a<3; a++) {
 
             Vector ro = ray.origin();
@@ -57,12 +46,26 @@ public class BoundingBox {
                 t0 = tmp;
             }
 
-            tmin = t0 > tmin ? t0 : tmin;
-            tmax = t1 < tmax ? t1 : tmax;
+            tmin = Math.max(t0, tmin);
+            tmax = Math.min(t1, tmax);
             if (tmax <= tmin) {
                 return false;
             }
         }
         return true;
     }
+
+    public static BoundingBox from(List<? extends Hittable> hittables) {
+        Vector currMin = Vector.MAX;
+        Vector currMax = Vector.MIN;
+        for (Hittable hittable : hittables) {
+            BoundingBox bounds = hittable.getBounds();
+            if (bounds == null) {
+                return null;
+            }
+            currMin = currMin.minWith(bounds.min);
+            currMax = currMax.maxWith(bounds.max);
+        }
+        return new BoundingBox(currMin, currMax);
+    }
 }
diff --git a/src/main/java/com/epeters/raytrace/hittables/BoundingVolume.java b/src/main/java/com/epeters/raytrace/hittables/BoundingVolume.java
index f689475..42c12dc 100644
--- a/src/main/java/com/epeters/raytrace/hittables/BoundingVolume.java
+++ b/src/main/java/com/epeters/raytrace/hittables/BoundingVolume.java
@@ -16,51 +16,47 @@ import static com.epeters.raytrace.utils.Utils.randomComponent;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#boundingvolumehierarchies/thebvhnodeclass">guide</a>
  */
-public class BoundingVolume implements Hittable {
+public  final class BoundingVolume extends Hittable {
 
     private final Hittable left;
     private final Hittable right;
-    private final BoundingBox bounds;
 
     public BoundingVolume(Hittable left) {
+        super(left.getBounds());
         this.left = left;
         this.right = null;
-        this.bounds = left.getBounds();
     }
 
     public BoundingVolume(Hittable left, Hittable right) {
+        super(BoundingBox.from(Arrays.asList(left, right)));
         this.left = left;
         this.right = right;
-        this.bounds = right != null
-                ? new BoundingBox(Arrays.asList(left.getBounds(), right.getBounds()))
-                : left.getBounds();
     }
 
     @Override
-    public BoundingBox getBounds() {
-        return bounds;
-    }
-
-    @Override
-    public Hit hit(Ray ray, double tmin, double tmax) {
-
-        if (!getBounds().hit(ray, tmin, tmax)) {
-            return null;
-        }
-
+    protected Hit computeHit(Ray ray, double tmin, double tmax) {
         Hit leftHit = left.hit(ray, tmin, tmax);
         if (right == null) {
             return leftHit;
         }
-
         Hit rightHit = right.hit(ray, tmin, leftHit == null ? tmax : leftHit.t());
         return (rightHit == null) ? leftHit : rightHit;
     }
 
+    public static BoundingVolume from(Hittable hittable) {
+        if (hittable instanceof BoundingVolume) {
+            return (BoundingVolume) hittable;
+        }
+        return new BoundingVolume(hittable);
+    }
+
     public static BoundingVolume from(List<? extends Hittable> hittables) {
 
+        if (hittables.size() == 0) {
+            throw new IllegalArgumentException("empty list is not allowed");
+        }
         if (hittables.size() == 1) {
-            return new BoundingVolume(hittables.get(0));
+            return from(hittables.get(0));
         }
 
         final int c = randomComponent();
diff --git a/src/main/java/com/epeters/raytrace/hittables/Hit.java b/src/main/java/com/epeters/raytrace/hittables/Hit.java
index 6d0bfc3..b7185f5 100644
--- a/src/main/java/com/epeters/raytrace/hittables/Hit.java
+++ b/src/main/java/com/epeters/raytrace/hittables/Hit.java
@@ -1,9 +1,9 @@
 package com.epeters.raytrace.hittables;
 
 import com.epeters.raytrace.Ray;
-import com.epeters.raytrace.solids.Solid;
+import com.epeters.raytrace.utils.Vector;
 
-import java.util.function.Supplier;
+import java.util.function.BiFunction;
 
 /**
  * Represents the intersection of a ray with an object. We don't compute all the details (e.g.
@@ -11,7 +11,7 @@ import java.util.function.Supplier;
  *
  * @param ray the ray in question
  * @param t the distance along the ray of the intersection
- * @param solid the object that was intersected
+ * @param color something that can compute the color at a point
  */
-public record Hit(Ray ray, double t, Solid solid) {
+public record Hit(Ray ray, double t, BiFunction<Vector,Vector,HitColor> color) {
 }
diff --git a/src/main/java/com/epeters/raytrace/hittables/HitColor.java b/src/main/java/com/epeters/raytrace/hittables/HitColor.java
new file mode 100644
index 0000000..d37e2d6
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/hittables/HitColor.java
@@ -0,0 +1,35 @@
+package com.epeters.raytrace.hittables;
+
+import com.epeters.raytrace.utils.Mector;
+import com.epeters.raytrace.utils.Vector;
+
+import java.util.function.Function;
+
+/**
+ * Represents the details of coloring a particular point
+ */
+public record HitColor(Vector emission, Vector attenuation, Vector bounce) {
+
+    public Vector combine(Function<Vector,Vector> tracer) {
+        Mector c = new Mector();
+        if (emission != null) {
+            c.plus(emission);
+        }
+        if (attenuation != null && bounce != null) {
+            c.plusTimes(attenuation, tracer.apply(bounce));
+        }
+        return c.toVector();
+    }
+
+    public static HitColor solid(Vector color) {
+        return new HitColor(null, color, null);
+    }
+
+    public static HitColor bounced(Vector color, Vector bounce) {
+        return new HitColor(null, color, bounce);
+    }
+
+    public static HitColor lit(Vector color) {
+        return new HitColor(color, null, null);
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/hittables/HitDetails.java b/src/main/java/com/epeters/raytrace/hittables/HitDetails.java
deleted file mode 100644
index 70253f4..0000000
--- a/src/main/java/com/epeters/raytrace/hittables/HitDetails.java
+++ /dev/null
@@ -1,29 +0,0 @@
-package com.epeters.raytrace.hittables;
-
-import com.epeters.raytrace.Ray;
-import com.epeters.raytrace.solids.Solid;
-import com.epeters.raytrace.utils.TextureCoordinates;
-import com.epeters.raytrace.utils.Vector;
-
-/**
- * Represents more detailed information about the intersection of a ray and a solid, including the point
- * of intersection, surface normal, color and bouncing information.
- */
-public record HitDetails(
-        Ray ray,
-        Solid solid,
-        Vector point,
-        Vector normal,
-        boolean front,
-        TextureCoordinates textureCoords) {
-
-    public static HitDetails from(Ray ray, Solid solid, Vector point, Vector normal, TextureCoordinates coords) {
-        boolean front = ray.direction().dot(normal) < 0;
-        if (!front) {
-            normal = normal.negate().normalize();
-        } else {
-            normal = normal.normalize();
-        }
-        return new HitDetails(ray, solid, point, normal, front, coords);
-    }
-}
diff --git a/src/main/java/com/epeters/raytrace/hittables/Hittable.java b/src/main/java/com/epeters/raytrace/hittables/Hittable.java
index 60da68f..7e8c858 100644
--- a/src/main/java/com/epeters/raytrace/hittables/Hittable.java
+++ b/src/main/java/com/epeters/raytrace/hittables/Hittable.java
@@ -2,16 +2,40 @@ package com.epeters.raytrace.hittables;
 
 import com.epeters.raytrace.Ray;
 import com.epeters.raytrace.solids.Solid;
+import com.epeters.raytrace.utils.Vector;
 
 /**
  * Generic interface for "something that can be hit by a {@link Ray}". This might be a
  * {@link Solid} or a more abstract bounding volume.
  */
-public interface Hittable {
+public abstract class Hittable {
+
+    private final BoundingBox bounds;
+
+    protected Hittable(BoundingBox bounds) {
+        this.bounds = bounds;
+    }
 
     /** @return the bounding box for this hittable (this will be called a lot) */
-    BoundingBox getBounds();
+    public final BoundingBox getBounds() {
+        return bounds;
+    }
 
     /** @retyrn a new {@link Hit} if this ray hit something; null otherwise */
-    Hit hit(Ray ray, double tmin, double tmax);
+    public final Hit hit(Ray ray, double tmin, double tmax) {
+        if (bounds != null && !bounds.intersects(ray, tmin, tmax)) {
+            return null;
+        }
+        return computeHit(ray, tmin, tmax);
+    }
+
+    protected abstract Hit computeHit(Ray ray, double tmin, double tmax);
+
+    public static Hittable translate(Hittable target, Vector offset) {
+        return new TranslatedHittable(target, offset);
+    }
+
+    public static Hittable rotateY(Hittable target, double angle) {
+        return new RotatedHittable(target, RotatedHittable.Axis.Y, angle);
+    }
 }
diff --git a/src/main/java/com/epeters/raytrace/hittables/HittableList.java b/src/main/java/com/epeters/raytrace/hittables/HittableList.java
deleted file mode 100644
index f5d0aba..0000000
--- a/src/main/java/com/epeters/raytrace/hittables/HittableList.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package com.epeters.raytrace.hittables;
-
-import com.epeters.raytrace.Ray;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.stream.Collectors;
-
-/**
- * Implementation of {@link Hittable} that represents a collection of other {@link Hittable}
- * objects and knows how to compute hits over them all.
- */
-public class HittableList implements Hittable {
-
-    private final List<Hittable> hittables;
-    private final BoundingBox bounds;
-
-    public HittableList(List<? extends Hittable> c) {
-        this.hittables = new ArrayList<>(c);
-        this.bounds = new BoundingBox(c.stream().map(Hittable::getBounds).collect(Collectors.toList()));
-    }
-
-    @Override
-    public BoundingBox getBounds() {
-        return bounds;
-    }
-
-    @Override
-    public Hit hit(Ray ray, double tmin, double tmax) {
-
-        if (!getBounds().hit(ray, tmin, tmax)) {
-            return null;
-        }
-
-        double tcur = Double.MAX_VALUE;
-        Hit best = null;
-        for (Hittable hittable : hittables) {
-            Hit hit = hittable.hit(ray, tmin, tcur);
-            if (hit != null) {
-                best = hit;
-                tcur = hit.t();
-            }
-        }
-        return best;
-    }
-}
diff --git a/src/main/java/com/epeters/raytrace/hittables/RotatedHittable.java b/src/main/java/com/epeters/raytrace/hittables/RotatedHittable.java
new file mode 100644
index 0000000..982c53b
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/hittables/RotatedHittable.java
@@ -0,0 +1,101 @@
+package com.epeters.raytrace.hittables;
+
+import com.epeters.raytrace.Ray;
+import com.epeters.raytrace.utils.Vector;
+
+import static com.epeters.raytrace.utils.Vector.MAX;
+import static com.epeters.raytrace.utils.Vector.MIN;
+import static java.lang.Math.sin;
+import static java.lang.Math.cos;
+import static java.lang.Math.toRadians;
+
+import static com.epeters.raytrace.utils.Vector.vec;
+
+public final class RotatedHittable extends Hittable {
+
+    public enum Axis {
+        X,
+        Y,
+        Z
+    }
+
+    private final Hittable target;
+    private final Axis axis;
+    private final double sin;
+    private final double cos;
+
+    public RotatedHittable(Hittable target, Axis axis, double angle) {
+        super(makeBounds(target.getBounds(), axis, angle));
+        this.target = target;
+        this.axis = axis;
+        this.sin = sin(toRadians(angle));
+        this.cos = cos(toRadians(angle));
+    }
+
+    @Override
+    protected Hit computeHit(Ray originalRay, double tmin, double tmax) {
+
+        // all of the rays and points supplied to this method will be in the outer coordinate
+        // system; we need to apply the forward rotation in order to pass them along to the
+        // target solid
+
+        Ray transformedRay = transformRay(originalRay);
+        Hit transformedHit = target.hit(transformedRay, tmin, tmax);
+        if (transformedHit == null) {
+            return null;
+        }
+
+        return new Hit(originalRay, transformedHit.t(), (point, incoming) -> {
+            Vector transformedPoint = transformPoint(point);
+            return transformedHit.color().apply(transformedPoint, transformedRay.direction());
+        });
+    }
+
+    private Ray transformRay(Ray originalRay) {
+        Vector ro = originalRay.origin();
+        Vector to = ro.rotateY(sin, cos);
+        Vector rd = originalRay.direction();
+        Vector td = rd.rotateY(sin, cos);
+        return new Ray(to, td);
+    }
+
+    private Vector transformPoint(Vector op) {
+        Vector tp = op.rotateY(sin, cos);
+        return tp;
+    }
+
+    private static BoundingBox makeBounds(BoundingBox original, Axis axis, double angle) {
+        if (axis != Axis.Y) {
+            throw new IllegalArgumentException(axis+"-axis rotation not supported");
+        }
+
+        double sin = sin(toRadians(angle));
+        double cos = cos(toRadians(angle));
+
+        Vector currMin = MAX;
+        Vector currMax = MIN;
+
+        for (int i=0; i<2; i++) {
+            for (int j=0; j<2; j++) {
+                for (int k=0; k<2; k++) {
+
+                    double x = i * original.getMax().x() + (1-i) * original.getMin().x();
+                    double y = j * original.getMax().y() + (1-j) * original.getMin().y();
+                    double z = k * original.getMax().z() + (1-k) * original.getMin().z();
+
+                    // the original solid reports its bounds in the inner coordinate system;
+                    // we need to apply the reverse rotation to produce the coordinates in
+                    // the outer coordinate system
+                    double newX = cos * x + sin * z;
+                    double newZ = cos * z - sin * x;
+
+                    Vector tester = vec(newX, y, newZ);
+                    currMin = currMin.minWith(tester);
+                    currMax = currMax.maxWith(tester);
+                }
+            }
+        }
+
+        return new BoundingBox(currMin, currMax);
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/hittables/TranslatedHittable.java b/src/main/java/com/epeters/raytrace/hittables/TranslatedHittable.java
new file mode 100644
index 0000000..3dbd9b0
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/hittables/TranslatedHittable.java
@@ -0,0 +1,52 @@
+package com.epeters.raytrace.hittables;
+
+import com.epeters.raytrace.Ray;
+import com.epeters.raytrace.utils.Vector;
+
+public final class TranslatedHittable extends Hittable {
+
+    private final Hittable target;
+    private final Vector offset;
+
+    public TranslatedHittable(Hittable target, Vector offset) {
+        super(makeBounds(target.getBounds(), offset));
+        this.target = target;
+        this.offset = offset;
+    }
+
+    @Override
+    protected Hit computeHit(Ray originalRay, double tmin, double tmax) {
+
+        // we transform the incoming ray into the new coordinate system and
+        // then apply the target's intersection logic
+        Ray transformedRay = transformRay(originalRay);
+        Hit transformedHit = target.hit(transformedRay, tmin, tmax);
+        if (transformedHit == null) {
+            return null;
+        }
+
+        // to compute the color, we have to transform both the point of
+        // intersection and the incoming ray
+        return new Hit(originalRay, transformedHit.t(), (point, incoming) -> {
+            Vector transformedPoint = transformPoint(point);
+            return transformedHit.color().apply(transformedPoint, transformedRay.direction());
+        });
+    }
+
+    private Ray transformRay(Ray originalRay) {
+        return new Ray(transformPoint(originalRay.origin()), originalRay.direction());
+    }
+
+    private Vector transformPoint(Vector point) {
+        return point.minus(offset);
+    }
+
+    private static BoundingBox makeBounds(BoundingBox original, Vector offset) {
+        if (original == null) {
+            return null;
+        }
+        return new BoundingBox(
+                original.getMin().plus(offset),
+                original.getMax().plus(offset));
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/materials/DialectricMaterial.java b/src/main/java/com/epeters/raytrace/materials/ClearMaterial.java
similarity index 61%
rename from src/main/java/com/epeters/raytrace/materials/DialectricMaterial.java
rename to src/main/java/com/epeters/raytrace/materials/ClearMaterial.java
index 1e89f3b..0290961 100644
--- a/src/main/java/com/epeters/raytrace/materials/DialectricMaterial.java
+++ b/src/main/java/com/epeters/raytrace/materials/ClearMaterial.java
@@ -1,6 +1,8 @@
 package com.epeters.raytrace.materials;
 
-import com.epeters.raytrace.hittables.HitDetails;
+import com.epeters.raytrace.Ray;
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.utils.Mector;
 import com.epeters.raytrace.utils.Vector;
 
 import static com.epeters.raytrace.utils.Utils.WHITE;
@@ -10,25 +12,25 @@ import static com.epeters.raytrace.utils.Utils.square;
 
 import static java.lang.Math.abs;
 
-public class DialectricMaterial implements Material {
+/**
+ * Implementation of a material that allows light to pass through it, possibly refracting it along
+ * the way. This can be used for e.g. glass and water.
+ */
+public final class ClearMaterial implements Material {
 
     private final double frontRatio;
     private final double backRatio;
 
-    public DialectricMaterial(double indexOfRefraction) {
+    public ClearMaterial(double indexOfRefraction) {
         this.frontRatio = 1.0 / indexOfRefraction;
         this.backRatio = indexOfRefraction;
     }
 
     @Override
-    public Vector computeAttenuation(HitDetails hit) {
-        return WHITE;
-    }
-
-    @Override
-    public Vector computeBounce(HitDetails hit) {
-        double ratio = hit.front() ? frontRatio : backRatio;
-        return refract(hit.ray().direction(), hit.normal(), ratio);
+    public HitColor computeHitColor(MaterialParams params) {
+        double ratio = params.front() ? frontRatio : backRatio;
+        Vector bounce = refract(params.incoming(), params.normal(), ratio);
+        return HitColor.bounced(WHITE, bounce);
     }
 
     private Vector refract(Vector incoming, Vector normal, double ratio) {
@@ -38,11 +40,13 @@ public class DialectricMaterial implements Material {
         boolean cannotRefract = ratio * sin > 1.0;
 
         // WTF if we negate the reflectance check, it looks a LOT more like glass
+        Vector result = null;
         if (cannotRefract || reflectance(cos, ratio) > random(0.0, 1.0)) {
-            return incoming.reflect(normal, 0.0);
+            result = incoming.reflect(normal, 0.0);
         } else {
-            return refract(incoming, normal, cos, ratio);
+            result = refract(incoming, normal, cos, ratio);
         }
+        return result;
     }
 
     /**
@@ -59,8 +63,8 @@ public class DialectricMaterial implements Material {
      * @return refraction based on Snell's law
      */
     private Vector refract(Vector incoming, Vector normal, double cos, double ratio) {
-        Vector outPerp = incoming.plus(normal.mul(cos)).mul(ratio);
-        Vector outPar = normal.mul(-sqrt(abs(1.0 - outPerp.square())));
-        return outPerp.plus(outPar);
+        Mector result = new Mector(normal).mul(cos).plus(incoming).mul(ratio);
+        double factor = -sqrt(abs(1.0 - result.square()));
+        return result.plusTimes(normal, factor).toVector();
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/materials/IsotropicMaterial.java b/src/main/java/com/epeters/raytrace/materials/IsotropicMaterial.java
new file mode 100644
index 0000000..7490dcd
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/materials/IsotropicMaterial.java
@@ -0,0 +1,20 @@
+package com.epeters.raytrace.materials;
+
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.utils.Vector;
+
+import static com.epeters.raytrace.utils.Utils.randomUnitVector;
+
+public final class IsotropicMaterial implements Material {
+
+    private final Vector color;
+
+    public IsotropicMaterial(Vector color) {
+        this.color = color;
+    }
+
+    @Override
+    public HitColor computeHitColor(MaterialParams params) {
+        return HitColor.bounced(color, randomUnitVector());
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/materials/LambertianMaterial.java b/src/main/java/com/epeters/raytrace/materials/LambertianMaterial.java
index dd43b77..ad16d3d 100644
--- a/src/main/java/com/epeters/raytrace/materials/LambertianMaterial.java
+++ b/src/main/java/com/epeters/raytrace/materials/LambertianMaterial.java
@@ -1,22 +1,22 @@
 package com.epeters.raytrace.materials;
 
-import com.epeters.raytrace.hittables.HitDetails;
-import com.epeters.raytrace.utils.Mector;
+import com.epeters.raytrace.hittables.HitColor;
 import com.epeters.raytrace.utils.Vector;
 import com.epeters.raytrace.textures.Texture;
 
+import static com.epeters.raytrace.textures.Texture.solid;
 import static com.epeters.raytrace.utils.Utils.randomUnitVector;
 
 /**
  * Implements "true" Lambertian reflection for a matte material with an arbitrary texture
  * @see <a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html#diffusematerials/analternativediffuseformulation">guide</a>
  */
-public class LambertianMaterial implements Material {
+public final class LambertianMaterial implements Material {
 
     private final Texture texture;
 
     public LambertianMaterial(Vector color) {
-        this(Texture.solid(color));
+        this(solid(color));
     }
 
     public LambertianMaterial(Texture texture) {
@@ -24,12 +24,9 @@ public class LambertianMaterial implements Material {
     }
 
     @Override
-    public Vector computeAttenuation(HitDetails hit) {
-        return texture.calculateColor(hit.point(), hit.textureCoords());
-    }
-
-    @Override
-    public Vector computeBounce(HitDetails hit) {
-        return hit.normal().plus(randomUnitVector());
+    public HitColor computeHitColor(MaterialParams params) {
+        Vector color = texture.calculateColor(params.point(), params.u(), params.v());
+        Vector bounce = params.normal().plus(randomUnitVector());
+        return HitColor.bounced(color, bounce);
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/materials/LightedMaterial.java b/src/main/java/com/epeters/raytrace/materials/LightedMaterial.java
index 72f5351..e54938d 100644
--- a/src/main/java/com/epeters/raytrace/materials/LightedMaterial.java
+++ b/src/main/java/com/epeters/raytrace/materials/LightedMaterial.java
@@ -1,29 +1,26 @@
 package com.epeters.raytrace.materials;
 
-import com.epeters.raytrace.hittables.HitDetails;
+import com.epeters.raytrace.hittables.HitColor;
 import com.epeters.raytrace.textures.Texture;
 import com.epeters.raytrace.utils.Vector;
 
-public class LightedMaterial implements Material {
+import static com.epeters.raytrace.textures.Texture.solid;
+
+public final class LightedMaterial implements Material {
 
     private final Texture texture;
 
-    public LightedMaterial(Texture texture) {
-        this.texture = texture;
+    public LightedMaterial(Vector color) {
+        this(solid(color));
     }
 
-    @Override
-    public Vector computeEmission(HitDetails hit) {
-        return texture.calculateColor(hit.point(), hit.textureCoords());
-    }
-
-    @Override
-    public Vector computeAttenuation(HitDetails hit) {
-        return null;
+    public LightedMaterial(Texture texture) {
+        this.texture = texture;
     }
 
     @Override
-    public Vector computeBounce(HitDetails hit) {
-        return null;
+    public HitColor computeHitColor(MaterialParams params) {
+        Vector color = texture.calculateColor(params.point(), params.u(), params.v());
+        return HitColor.lit(color);
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/materials/Material.java b/src/main/java/com/epeters/raytrace/materials/Material.java
index 652743e..bed2dbd 100644
--- a/src/main/java/com/epeters/raytrace/materials/Material.java
+++ b/src/main/java/com/epeters/raytrace/materials/Material.java
@@ -1,6 +1,6 @@
 package com.epeters.raytrace.materials;
 
-import com.epeters.raytrace.hittables.HitDetails;
+import com.epeters.raytrace.hittables.HitColor;
 import com.epeters.raytrace.utils.Vector;
 import com.epeters.raytrace.textures.Texture;
 
@@ -10,9 +10,7 @@ import com.epeters.raytrace.textures.Texture;
  */
 public interface Material {
 
-    default Vector computeEmission(HitDetails hit) { return null; }
-    Vector computeAttenuation(HitDetails hit);
-    Vector computeBounce(HitDetails hit);
+    HitColor computeHitColor(MaterialParams params);
 
     static Material lambertian(Vector color) {
         return new LambertianMaterial(color);
@@ -27,7 +25,7 @@ public interface Material {
     }
 
     static Material dialectric(double backRatio) {
-        return new DialectricMaterial(backRatio);
+        return new ClearMaterial(backRatio);
     }
 
     static Material light(Vector color) { return new LightedMaterial(Texture.solid(color)); }
diff --git a/src/main/java/com/epeters/raytrace/materials/MaterialParams.java b/src/main/java/com/epeters/raytrace/materials/MaterialParams.java
new file mode 100644
index 0000000..c24c9cf
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/materials/MaterialParams.java
@@ -0,0 +1,29 @@
+package com.epeters.raytrace.materials;
+
+import com.epeters.raytrace.utils.Vector;
+
+/**
+ * Everything we need to know to calculate the color of a material
+ *
+ * @param point the point of intersection
+ * @param incoming the direction of the incoming ray of light
+ * @param normal the surface normal at the point
+ * @param front was this a hit on the front or the back of the object?
+ * @param u u-coordinate for texture mapping
+ * @param v v-coordinate for texture mapping
+ */
+public record MaterialParams(Vector point, Vector incoming, Vector normal, boolean front, double u, double v) {
+
+    public static boolean isBackFace(Vector incoming, Vector normal) {
+        return incoming.dot(normal) > 0.0;
+    }
+
+    public static MaterialParams from(Vector point, Vector incoming, Vector normal, double u, double v) {
+        boolean f = true;
+        if (!incoming.isOpposite(normal)) {
+            f = false;
+            normal = normal.negate();
+        }
+        return new MaterialParams(point, incoming, normal, f, u, v);
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/materials/MetalMaterial.java b/src/main/java/com/epeters/raytrace/materials/MetalMaterial.java
index 4996a9b..cc24a1d 100644
--- a/src/main/java/com/epeters/raytrace/materials/MetalMaterial.java
+++ b/src/main/java/com/epeters/raytrace/materials/MetalMaterial.java
@@ -1,31 +1,34 @@
 package com.epeters.raytrace.materials;
 
-import com.epeters.raytrace.hittables.HitDetails;
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.textures.Texture;
 import com.epeters.raytrace.utils.Vector;
 
+import static com.epeters.raytrace.textures.Texture.solid;
 import static com.epeters.raytrace.utils.Utils.clamp;
 
 /**
  * Implements metal reflection with fuzzing
  * @see <a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html#metal">guide</a>
  */
-public class MetalMaterial implements Material {
+public final class MetalMaterial implements Material {
 
-    private final Vector color;
+    private final Texture texture;
     private final double fuzz;
 
     public MetalMaterial(Vector color, double fuzz) {
-        this.color = color;
-        this.fuzz = clamp(fuzz, 0.0, 1.0);
+        this(solid(color), fuzz);
     }
 
-    @Override
-    public Vector computeAttenuation(HitDetails hit) {
-        return color;
+    public MetalMaterial(Texture texture, double fuzz) {
+        this.texture = texture;
+        this.fuzz = clamp(fuzz, 0.0, 1.0);
     }
 
     @Override
-    public Vector computeBounce(HitDetails hit) {
-        return hit.ray().direction().reflect(hit.normal(), fuzz);
+    public HitColor computeHitColor(MaterialParams params) {
+        Vector color = texture.calculateColor(params.point(), params.u(), params.v());
+        Vector bounce =  params.incoming().reflect(params.normal(), fuzz);
+        return HitColor.bounced(color, bounce);
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/renderer/ParallelProgress.java b/src/main/java/com/epeters/raytrace/renderer/ParallelProgress.java
index 8981544..914ea4b 100644
--- a/src/main/java/com/epeters/raytrace/renderer/ParallelProgress.java
+++ b/src/main/java/com/epeters/raytrace/renderer/ParallelProgress.java
@@ -36,6 +36,7 @@ public final class ParallelProgress {
 
         double currentTime = System.currentTimeMillis();
         double thisIntervalTime = currentTime - lastIntervalTime;
+        double totalTime = currentTime - startTime;
         lastIntervalTime = currentTime;
 
         int pixelsThisInterval = pixelsLastInterval.getAndSet(0);
@@ -47,7 +48,8 @@ public final class ParallelProgress {
 
         int pctComplete = (int)(pixelsComplete * 100.0 / pixelsTotal);
         double pixelsPerMinute = pixelsThisInterval / (thisIntervalTime / 60000.0);
-        double minutesLeft = (pixelsTotal - pixelsComplete) / pixelsPerMinute;
+        double pixelsPerMinuteAvg = pixelsComplete / (totalTime / 60000.0);
+        double minutesLeft = (pixelsTotal - pixelsComplete) / pixelsPerMinuteAvg;
         System.err.printf("%d pixels (%d%%) complete at %.0f pixels/min -> %.3f min remaining (%.3f%% free memory)%n",
                 pixelsComplete,
                 pctComplete,
diff --git a/src/main/java/com/epeters/raytrace/renderer/Renderer.java b/src/main/java/com/epeters/raytrace/renderer/Renderer.java
index 3c22a4f..3acfa86 100644
--- a/src/main/java/com/epeters/raytrace/renderer/Renderer.java
+++ b/src/main/java/com/epeters/raytrace/renderer/Renderer.java
@@ -12,15 +12,13 @@ import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
 import java.util.Map;
-import java.util.TreeMap;
-import java.util.TreeSet;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.TimeUnit;
 import java.util.stream.Collectors;
 
-public class Renderer {
+public final class Renderer {
 
     private final Tracer tracer;
     private final File file;
@@ -89,7 +87,6 @@ public class Renderer {
         BufferedImage image = new BufferedImage(tracer.getImageWidth(), tracer.getImageHeight(), BufferedImage.TYPE_INT_RGB);
         for (int y=0; y<rows.size(); y++) {
             Vector [] row = rows.get(y);
-            System.err.println(y);
             for (int x=0; x<row.length; x++) {
                 Vector pixel = row[x];
                 int rgb = pixel.toRgb();
diff --git a/src/main/java/com/epeters/raytrace/solids/AxisAlignedRectangle.java b/src/main/java/com/epeters/raytrace/solids/AxisAlignedRectangle.java
new file mode 100644
index 0000000..6588c08
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/solids/AxisAlignedRectangle.java
@@ -0,0 +1,97 @@
+package com.epeters.raytrace.solids;
+
+import com.epeters.raytrace.Ray;
+import com.epeters.raytrace.hittables.BoundingBox;
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.materials.Material;
+import com.epeters.raytrace.materials.MaterialParams;
+import com.epeters.raytrace.utils.Vector;
+
+import static com.epeters.raytrace.utils.Vector.vec;
+import static java.lang.Math.max;
+import static java.lang.Math.min;
+
+/**
+ * Implementation of a rectangular "slab" on the XY plane with a minimal thickness.
+ *
+ * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#rectanglesandlights/creatingrectangleobjects">guide</a>
+ */
+public final class AxisAlignedRectangle extends Solid {
+
+    public enum Type {
+
+        XY(0, 1, 2, vec(0.0, 0.0, 1.0)),
+        YZ(1, 2, 0, vec(1.0, 0.0, 0.0)),
+        XZ(0, 2, 1, vec(0.0, 1.0, 0.0));
+
+        private final int i;
+        private final int j;
+        private final int k;
+        private final Vector normal;
+
+        private Type(int i, int j, int k, Vector normal) {
+            this.i = i;
+            this.j = j;
+            this.k = k;
+            this.normal = normal;
+        }
+    }
+
+    private final Type type;
+    private final double i0;
+    private final double j0;
+    private final double i1;
+    private final double j1;
+    private final double k;
+
+    public AxisAlignedRectangle(Material material,
+                                Type type,
+                                double i0, double j0,
+                                double i1, double j1,
+                                double k) {
+        super(makeBounds(type, i0, i1, j0, j1, k), material);
+        this.type = type;
+        this.i0 = min(i0, i1);
+        this.i1 = max(i0, i1);
+        this.j0 = min(j0, j1);
+        this.j1 = max(j0, j1);
+        this.k = k;
+    }
+
+    @Override
+    protected double computeHitDistance(Ray ray, double tmin, double tmax) {
+
+        Vector ro = ray.origin();
+        Vector rd = ray.direction();
+
+        double t = (k - ro.component(type.k)) / rd.component(type.k);
+        if (t < tmin || t > tmax) {
+            return Double.NaN;
+        }
+
+        double hi = ro.component(type.i) + t * ray.direction().component(type.i);
+        double hj = ro.component(type.j) + t * ray.direction().component(type.j);
+        if (hi < i0 || hi > i1 || hj < j0 || hj > j1) {
+            return Double.NaN;
+        }
+
+        return t;
+    }
+
+    @Override
+    protected HitColor computeHitColor(Vector point, Vector incoming) {
+        double u = (point.component(type.i) - i0) / (i1 - i0);
+        double v = (point.component(type.j) - j0) / (j1 - j0);
+        return getMaterial().computeHitColor(MaterialParams.from(point, incoming, type.normal, u, v));
+    }
+
+    private static BoundingBox makeBounds(Type type, double i0, double i1, double j0, double j1, double k) {
+        double k0 = k - 0.0001;
+        double k1 = k + 0.0001;
+        return switch (type) {
+            case XY -> new BoundingBox(vec(i0, j0, k0), vec(i1, j1, k1));
+            case YZ -> new BoundingBox(vec(k0, i0, j0), vec(k1, i1, j1));
+            case XZ -> new BoundingBox(vec(i0, k0, j0), vec(i1, k1, j1));
+        };
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/solids/ConstantMedium.java b/src/main/java/com/epeters/raytrace/solids/ConstantMedium.java
new file mode 100644
index 0000000..0f1d162
--- /dev/null
+++ b/src/main/java/com/epeters/raytrace/solids/ConstantMedium.java
@@ -0,0 +1,66 @@
+package com.epeters.raytrace.solids;
+
+import com.epeters.raytrace.Ray;
+import com.epeters.raytrace.hittables.Hit;
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.hittables.Hittable;
+import com.epeters.raytrace.materials.Material;
+import com.epeters.raytrace.materials.MaterialParams;
+import com.epeters.raytrace.utils.Vector;
+
+import static java.lang.Math.log;
+import static java.lang.Math.max;
+import static java.lang.Math.min;
+import static com.epeters.raytrace.utils.Utils.random;
+import static com.epeters.raytrace.utils.Vector.vec;
+
+public final class ConstantMedium extends Solid {
+
+    public static final Vector NORMAL = vec(1.0, 0.0, 0.0);
+
+    private final Hittable boundary;
+    private final double negativeInverseDensity;
+
+    public ConstantMedium(Material material, Hittable boundary, double density) {
+        super(boundary.getBounds(), material);
+        this.boundary = boundary;
+        this.negativeInverseDensity = -1.0 / density;
+    }
+
+    @Override
+    protected double computeHitDistance(Ray ray, double tmin, double tmax) {
+
+        // project the ray across all of space and find the points where it intersects
+        // with our boundary (we're assuming there are only two hits)
+        Hit hit1 = boundary.hit(ray, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);
+        Hit hit2 = hit1 == null ? null : boundary.hit(ray, hit1.t() + 0.0001, Double.POSITIVE_INFINITY);
+        if (hit2 == null) {
+            return Double.NaN;
+        }
+
+        // if the ray originates inside the boundary, or the boundary overlaps with
+        // tmax, we'll truncate these values
+        double r1t = max(tmin, hit1.t());
+        double r2t = min(tmax, hit2.t());
+
+        // using the two hit points, determine how far the ray travels inside the
+        // boundary, and calculate a random fraction of that
+//        Vector p1 = ray.at(r1t);
+//        Vector p2 = ray.at(r2t);
+//        double rayLength = p1.minus(p2).length();
+        double rayLength = ray.direction().length();
+        double distanceInsideBoundary = (r2t - r1t) * rayLength;
+        double hitDistance = negativeInverseDensity * log(random());
+        if (hitDistance > distanceInsideBoundary) {
+            return Double.NaN;
+        }
+
+        return r1t + hitDistance / rayLength;
+    }
+
+    @Override
+    protected HitColor computeHitColor(Vector point, Vector incoming) {
+        MaterialParams params = MaterialParams.from(point, incoming, NORMAL, -1.0, -1.0);
+        return getMaterial().computeHitColor(params);
+    }
+}
diff --git a/src/main/java/com/epeters/raytrace/solids/Solid.java b/src/main/java/com/epeters/raytrace/solids/Solid.java
index bd4c225..aa64773 100644
--- a/src/main/java/com/epeters/raytrace/solids/Solid.java
+++ b/src/main/java/com/epeters/raytrace/solids/Solid.java
@@ -1,37 +1,37 @@
 package com.epeters.raytrace.solids;
 
 import com.epeters.raytrace.Ray;
-import com.epeters.raytrace.utils.TextureCoordinates;
+import com.epeters.raytrace.hittables.BoundingVolume;
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.materials.IsotropicMaterial;
 import com.epeters.raytrace.utils.Vector;
 import com.epeters.raytrace.hittables.BoundingBox;
 import com.epeters.raytrace.hittables.Hit;
-import com.epeters.raytrace.hittables.HitDetails;
 import com.epeters.raytrace.hittables.Hittable;
 import com.epeters.raytrace.materials.Material;
 
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.epeters.raytrace.solids.AxisAlignedRectangle.Type;
+
 /**
  * Implementation of a solid object that knows how to be hit by a ray and then calculate
  * detailed information about the intersection.
  */
-public abstract class Solid implements Hittable {
+public abstract class Solid extends Hittable {
 
     private final Material material;
-    private final BoundingBox bounds;
 
-    public Solid(Material material, BoundingBox bounds) {
+    protected Solid(BoundingBox bounds, Material material) {
+        super(bounds);
         this.material = material;
-        this.bounds = bounds;
     }
 
-    public Material getMaterial() {
+    public final Material getMaterial() {
         return material;
     }
 
-    @Override
-    public BoundingBox getBounds() {
-        return bounds;
-    }
-
     /**
      * @param ray a ray of interest
      * @param tmin minimum hit distance
@@ -39,18 +39,12 @@ public abstract class Solid implements Hittable {
      * @return a {@link Hit} calculated using the underlying geometry (null if this is a miss)
      */
     @Override
-    public Hit hit(Ray ray, double tmin, double tmax) {
-
-        if (!getBounds().hit(ray, tmin, tmax)) {
-            return null;
-        }
-
+    protected Hit computeHit(Ray ray, double tmin, double tmax) {
         double t = computeHitDistance(ray, tmin, tmax);
         if (Double.isNaN(t)) {
             return null;
         }
-
-        return new Hit(ray, t, this);
+        return new Hit(ray, t, this::computeHitColor);
     }
 
     /**
@@ -59,38 +53,51 @@ public abstract class Solid implements Hittable {
      */
     protected abstract double computeHitDistance(Ray ray, double tmin, double tmax);
 
+    protected abstract HitColor computeHitColor(Vector point, Vector incoming);
+
     /**
-     * @param hit the information about a hit
-     * @return detailed information about the hit
+     * @return a spherical solid with the supplied properties
      */
-    public HitDetails computeHitDetails(Hit hit) {
-        Vector point = hit.ray().at(hit.t());
-        Vector normal = computeSurfaceNormal(point);
-        TextureCoordinates coords = computeTextureCoordinates(point, normal);
-        return HitDetails.from(hit.ray(), this, point, normal, coords);
+    public static Solid sphere(Vector center, double radius, Material material) {
+        return new Sphere(material, center, radius);
     }
 
     /**
-     * @return the outward surface normal at the supplied point
+     * @return a rectangle aligned to the x and y axes
      */
-    protected abstract Vector computeSurfaceNormal(Vector point);
+    public static Solid rectXY(double x0, double y0, double x1, double y1, double z, Material material) {
+        return new AxisAlignedRectangle(material, Type.XY, x0, y0, x1, y1, z);
+    }
 
     /**
-     * @return the UV texture coordinates at the supplied point
+     * @return a rectangle aligned to the y and z axes
      */
-    protected abstract TextureCoordinates computeTextureCoordinates(Vector point, Vector normal);
+    public static Solid rectYZ(double y0, double z0, double y1, double z1, double x, Material material) {
+        return new AxisAlignedRectangle(material, Type.YZ, y0, z0, y1, z1, x);
+    }
 
     /**
-     * @return a spherical solid with the supplied properties
+     * @return a rectangle aligned to the x and z axes
      */
-    public static Solid sphere(Vector center, double radius, Material material) {
-        return new Sphere(material, center, radius);
+    public static Solid rectXZ(double x0, double z0, double x1, double z1, double y, Material material) {
+        return new AxisAlignedRectangle(material, Type.XZ, x0, z0, x1, z1, y);
     }
 
     /**
-     * @return a rectangle
+     * @return a box spanning the supplied points
      */
-    public static Solid rect(double x0, double y0, double x1, double y1, double z, Material material) {
-        return new XYRectangle(material, x0, y0, x1, y1, z);
+    public static Hittable box(Vector min, Vector max, Material material) {
+        List<Solid> solids = new ArrayList<>();
+        solids.add(rectXY(min.x(), min.y(), max.x(), max.y(), min.z(), material));
+        solids.add(rectXY(min.x(), min.y(), max.x(), max.y(), max.z(), material));
+        solids.add(rectXZ(min.x(), min.z(), max.x(), max.z(), min.y(), material));
+        solids.add(rectXZ(min.x(), min.z(), max.x(), max.z(), max.y(), material));
+        solids.add(rectYZ(min.y(), min.z(), max.y(), max.z(), min.x(), material));
+        solids.add(rectYZ(min.y(), min.z(), max.y(), max.z(), max.x(), material));
+        return BoundingVolume.from(solids);
+    }
+
+    public static Hittable fog(Hittable boundary, double density, Vector color) {
+        return new ConstantMedium(new IsotropicMaterial(color), boundary, density);
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/solids/Sphere.java b/src/main/java/com/epeters/raytrace/solids/Sphere.java
index 9f8d336..f52dfa0 100644
--- a/src/main/java/com/epeters/raytrace/solids/Sphere.java
+++ b/src/main/java/com/epeters/raytrace/solids/Sphere.java
@@ -1,8 +1,9 @@
 package com.epeters.raytrace.solids;
 
 import com.epeters.raytrace.Ray;
+import com.epeters.raytrace.hittables.HitColor;
+import com.epeters.raytrace.materials.MaterialParams;
 import com.epeters.raytrace.utils.Mector;
-import com.epeters.raytrace.utils.TextureCoordinates;
 import com.epeters.raytrace.utils.Vector;
 import com.epeters.raytrace.hittables.BoundingBox;
 import com.epeters.raytrace.materials.Material;
@@ -18,13 +19,13 @@ import static java.lang.Math.atan2;
 /**
  * Concrete implementation of {@link Solid} for a simple sphere.
  */
-public class Sphere extends Solid {
+public final class Sphere extends Solid {
 
     private final Vector center;
     private final double radius;
 
     public Sphere(Material material, Vector center, double radius) {
-        super(material, computeBounds(center, radius));
+        super(computeBounds(center, radius), material);
         this.center = center;
         this.radius = radius;
     }
@@ -60,15 +61,13 @@ public class Sphere extends Solid {
     }
 
     @Override
-    protected Vector computeSurfaceNormal(Vector point) {
-        return new Mector().plus(point).minus(center).div(radius).normalize().toVector();
-    }
-
-    @Override
-    protected TextureCoordinates computeTextureCoordinates(Vector point, Vector normal) {
+    protected HitColor computeHitColor(Vector point, Vector incoming) {
+        Vector normal = new Mector().plus(point).minus(center).div(radius).normalize().toVector();
         double theta = acos(-normal.y());
         double phi = atan2(-normal.z(), normal.x()) + PI;
-        return new TextureCoordinates(phi / (2*PI), theta / PI);
+        double u = phi / (2 * PI);
+        double v = theta / PI;
+        return getMaterial().computeHitColor(MaterialParams.from(point, incoming, normal, u, v));
     }
 
     public String toString() {
diff --git a/src/main/java/com/epeters/raytrace/solids/XYRectangle.java b/src/main/java/com/epeters/raytrace/solids/XYRectangle.java
deleted file mode 100644
index f3784bc..0000000
--- a/src/main/java/com/epeters/raytrace/solids/XYRectangle.java
+++ /dev/null
@@ -1,66 +0,0 @@
-package com.epeters.raytrace.solids;
-
-import com.epeters.raytrace.Ray;
-import com.epeters.raytrace.hittables.BoundingBox;
-import com.epeters.raytrace.materials.Material;
-import com.epeters.raytrace.utils.TextureCoordinates;
-import com.epeters.raytrace.utils.Vector;
-
-import static com.epeters.raytrace.utils.Vector.vec;
-
-/**
- * Implementation of a rectangular "slab" on the XY plane with a minimal thickness.
- *
- * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#rectanglesandlights/creatingrectangleobjects">guide</a>
- */
-public class XYRectangle extends Solid {
-
-    public static final Vector NORMAL = vec(0.0, 0.0, 1.0);
-
-    private final double x0;
-    private final double y0;
-    private final double x1;
-    private final double y1;
-    private final double k;
-
-    public XYRectangle(Material material, double x0, double y0, double x1, double y1, double k) {
-        super(material, new BoundingBox(vec(x0, y0, k-0.0001), vec(x1, y1, k+0.0001)));
-        this.x0 = x0;
-        this.y0 = y0;
-        this.x1 = x1;
-        this.y1 = y1;
-        this.k = k;
-    }
-
-    @Override
-    protected double computeHitDistance(Ray ray, double tmin, double tmax) {
-
-        Vector ro = ray.origin();
-        Vector rd = ray.direction();
-
-        double t = (k - ro.z()) / rd.z();
-        if (t < tmin || t > tmax) {
-            return Double.NaN;
-        }
-
-        double x = ro.x() + t * ray.direction().x();
-        double y = ro.y() + t * ray.direction().y();
-        if (x < x0 || x > x1 || y < y0 || y > y1) {
-            return Double.NaN;
-        }
-
-        return t;
-    }
-
-    @Override
-    protected Vector computeSurfaceNormal(Vector point) {
-        return NORMAL;
-    }
-
-    @Override
-    protected TextureCoordinates computeTextureCoordinates(Vector point, Vector normal) {
-        double u = (point.x() - x0) / (x1 - x0);
-        double v = (point.y() - y0) / (y1 - y0);
-        return new TextureCoordinates(u, v);
-    }
-}
diff --git a/src/main/java/com/epeters/raytrace/textures/CheckeredTexture.java b/src/main/java/com/epeters/raytrace/textures/CheckeredTexture.java
index 5680d6a..d71b93d 100644
--- a/src/main/java/com/epeters/raytrace/textures/CheckeredTexture.java
+++ b/src/main/java/com/epeters/raytrace/textures/CheckeredTexture.java
@@ -1,6 +1,5 @@
 package com.epeters.raytrace.textures;
 
-import com.epeters.raytrace.utils.TextureCoordinates;
 import com.epeters.raytrace.utils.Vector;
 
 import static java.lang.Math.sin;
@@ -10,7 +9,7 @@ import static java.lang.Math.sin;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#solidtextures/acheckertexture">guide</a>
  */
-public class CheckeredTexture implements Texture {
+public final class CheckeredTexture implements Texture {
 
     private final Texture even;
     private final Texture odd;
@@ -25,11 +24,11 @@ public class CheckeredTexture implements Texture {
     }
 
     @Override
-    public Vector calculateColor(Vector point, TextureCoordinates coords) {
+    public Vector calculateColor(Vector point, double u, double v) {
         double sx = sin(10.0 * point.x());
         double sy = sin(10.0 * point.y());
         double sz = sin(10.0 * point.z());
         double sines = sx * sy * sz;
-        return (sines < 0) ? odd.calculateColor(point, coords) : even.calculateColor(point, coords);
+        return (sines < 0) ? odd.calculateColor(point, u, v) : even.calculateColor(point, u, v);
     }
 }
diff --git a/src/main/java/com/epeters/raytrace/textures/ImageTexture.java b/src/main/java/com/epeters/raytrace/textures/ImageTexture.java
index c934f9e..c200d59 100644
--- a/src/main/java/com/epeters/raytrace/textures/ImageTexture.java
+++ b/src/main/java/com/epeters/raytrace/textures/ImageTexture.java
@@ -1,6 +1,5 @@
 package com.epeters.raytrace.textures;
 
-import com.epeters.raytrace.utils.TextureCoordinates;
 import com.epeters.raytrace.utils.Vector;
 
 import javax.imageio.ImageIO;
@@ -15,7 +14,7 @@ import static com.epeters.raytrace.utils.Vector.vec;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#imagetexturemapping">guide</a>
  */
-public class ImageTexture implements Texture {
+public final class ImageTexture implements Texture {
 
     private final BufferedImage image;
     private final int width;
@@ -32,14 +31,14 @@ public class ImageTexture implements Texture {
     }
 
     @Override
-    public Vector calculateColor(Vector point, TextureCoordinates coords) {
+    public Vector calculateColor(Vector point, double u, double v) {
 
-        int i = (int) (clamp(coords.u(), 0.0, 1.0) * width);
+        int i = (int) (clamp(u, 0.0, 1.0) * width);
         if (i > width) {
             i = width - 1;
         }
 
-        int j = (int) (clamp((1.0 - coords.v()), 0.0, 1.0) * height);
+        int j = (int) (clamp((1.0 - v), 0.0, 1.0) * height);
         if (j > height) {
             j = height - 1;
         }
diff --git a/src/main/java/com/epeters/raytrace/textures/NoiseTexture.java b/src/main/java/com/epeters/raytrace/textures/NoiseTexture.java
index 6bae6ea..06bdfb7 100644
--- a/src/main/java/com/epeters/raytrace/textures/NoiseTexture.java
+++ b/src/main/java/com/epeters/raytrace/textures/NoiseTexture.java
@@ -1,7 +1,6 @@
 package com.epeters.raytrace.textures;
 
 import com.epeters.raytrace.utils.Perlin;
-import com.epeters.raytrace.utils.TextureCoordinates;
 import com.epeters.raytrace.utils.Vector;
 
 /**
@@ -10,7 +9,7 @@ import com.epeters.raytrace.utils.Vector;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#perlinnoise/usingrandomvectorsonthelatticepoints">guide</a>
  */
-public class NoiseTexture implements Texture {
+public final class NoiseTexture implements Texture {
 
     private final Perlin perlin;
     private final Vector base;
@@ -23,7 +22,7 @@ public class NoiseTexture implements Texture {
     }
 
     @Override
-    public Vector calculateColor(Vector point, TextureCoordinates coords) {
+    public Vector calculateColor(Vector point, double u, double v) {
         double n = 0.5 * (1.0 - perlin.noise(point.mul(scale)));
         return base.mul(n);
     }
diff --git a/src/main/java/com/epeters/raytrace/textures/Texture.java b/src/main/java/com/epeters/raytrace/textures/Texture.java
index 799f904..beaa66b 100644
--- a/src/main/java/com/epeters/raytrace/textures/Texture.java
+++ b/src/main/java/com/epeters/raytrace/textures/Texture.java
@@ -1,6 +1,5 @@
 package com.epeters.raytrace.textures;
 
-import com.epeters.raytrace.utils.TextureCoordinates;
 import com.epeters.raytrace.utils.Vector;
 
 /**
@@ -8,10 +7,10 @@ import com.epeters.raytrace.utils.Vector;
  */
 public interface Texture {
 
-    Vector calculateColor(Vector point, TextureCoordinates coords);
+    Vector calculateColor(Vector point, double u, double v);
 
     static Texture solid(Vector color) {
-        return (p, c) -> color;
+        return (p, u, v) -> color;
     }
 
     static Texture checker(Vector even, Vector odd) { return new CheckeredTexture(even, odd); }
@@ -19,4 +18,6 @@ public interface Texture {
     static Texture noise(Vector color, double scale) { return new NoiseTexture(color, scale); }
 
     static Texture turbulence(Vector color, double scale, int depth) { return new TurbulentTexture(color, scale, depth); }
+
+    static Texture image(String path) { return new ImageTexture(path); }
 }
diff --git a/src/main/java/com/epeters/raytrace/textures/TurbulentTexture.java b/src/main/java/com/epeters/raytrace/textures/TurbulentTexture.java
index 752aa4c..21adc85 100644
--- a/src/main/java/com/epeters/raytrace/textures/TurbulentTexture.java
+++ b/src/main/java/com/epeters/raytrace/textures/TurbulentTexture.java
@@ -1,7 +1,6 @@
 package com.epeters.raytrace.textures;
 
 import com.epeters.raytrace.utils.Perlin;
-import com.epeters.raytrace.utils.TextureCoordinates;
 import com.epeters.raytrace.utils.Vector;
 
 import static java.lang.Math.sin;
@@ -11,7 +10,7 @@ import static java.lang.Math.sin;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#perlinnoise/introducingturbulence">guide</a>
  */
-public class TurbulentTexture implements Texture {
+public final class TurbulentTexture implements Texture {
 
     private final Perlin perlin;
     private final Vector base;
@@ -26,7 +25,7 @@ public class TurbulentTexture implements Texture {
     }
 
     @Override
-    public Vector calculateColor(Vector point, TextureCoordinates coords) {
+    public Vector calculateColor(Vector point, double u, double v) {
         double n = 0.5 * sin(scale * point.z() + 10.0 * perlin.turbulence(point, depth));
         return base.mul(n);
     }
diff --git a/src/main/java/com/epeters/raytrace/utils/Mector.java b/src/main/java/com/epeters/raytrace/utils/Mector.java
index 38f6167..ecbd80e 100644
--- a/src/main/java/com/epeters/raytrace/utils/Mector.java
+++ b/src/main/java/com/epeters/raytrace/utils/Mector.java
@@ -41,6 +41,20 @@ public final class Mector {
         return this;
     }
 
+    public Mector plusTimes(Vector v, double factor) {
+        x += v.x() * factor;
+        y += v.y() * factor;
+        z += v.z() * factor;
+        return this;
+    }
+
+    public Mector plusTimes(Vector v, Vector f) {
+        x += v.x() * f.x();
+        y += v.y() * f.y();
+        z += v.z() * f.z();
+        return this;
+    }
+
     public Mector minus(Vector v) {
         x -= v.x();
         y -= v.y();
diff --git a/src/main/java/com/epeters/raytrace/utils/Perlin.java b/src/main/java/com/epeters/raytrace/utils/Perlin.java
index 42dc9f1..fd0725c 100644
--- a/src/main/java/com/epeters/raytrace/utils/Perlin.java
+++ b/src/main/java/com/epeters/raytrace/utils/Perlin.java
@@ -11,7 +11,7 @@ import static java.lang.Math.floor;
  *
  * @see <a href="https://raytracing.github.io/books/RayTracingTheNextWeek.html#perlinnoise">guide</a>
  */
-public class Perlin {
+public final class Perlin {
 
     public static final int POINT_COUNT = 256;
 
diff --git a/src/main/java/com/epeters/raytrace/utils/TextureCoordinates.java b/src/main/java/com/epeters/raytrace/utils/TextureCoordinates.java
deleted file mode 100644
index df03a52..0000000
--- a/src/main/java/com/epeters/raytrace/utils/TextureCoordinates.java
+++ /dev/null
@@ -1,9 +0,0 @@
-package com.epeters.raytrace.utils;
-
-/**
- * Convenience class to store texture coordinates
- * @param u
- * @param v
- */
-public record TextureCoordinates(double u, double v) {
-}
diff --git a/src/main/java/com/epeters/raytrace/utils/Utils.java b/src/main/java/com/epeters/raytrace/utils/Utils.java
index 93193e9..fac7ec6 100644
--- a/src/main/java/com/epeters/raytrace/utils/Utils.java
+++ b/src/main/java/com/epeters/raytrace/utils/Utils.java
@@ -8,7 +8,7 @@ import static com.epeters.raytrace.utils.Vector.vec;
 /**
  * Helpers for common simple stuff
  */
-public class Utils {
+public final class Utils {
 
     public static final Vector RED = vec(1.0, 0.0, 0.0);
     public static final Vector BLACK = Vector.ORIGIN;
diff --git a/src/main/java/com/epeters/raytrace/utils/Vector.java b/src/main/java/com/epeters/raytrace/utils/Vector.java
index 5c1c962..a8f5490 100644
--- a/src/main/java/com/epeters/raytrace/utils/Vector.java
+++ b/src/main/java/com/epeters/raytrace/utils/Vector.java
@@ -4,6 +4,7 @@ import static com.epeters.raytrace.utils.Utils.randomUnitVector;
 import static com.epeters.raytrace.utils.Utils.scaleInt;
 import static com.epeters.raytrace.utils.Utils.sqrt;
 
+import static java.lang.Math.abs;
 import static java.lang.Math.min;
 import static java.lang.Math.max;
 
@@ -13,6 +14,8 @@ import static java.lang.Math.max;
 public record Vector(double x, double y, double z) {
 
     public static final Vector ORIGIN = new Vector(0.0, 0.0, 0.0);
+    public static final Vector MIN = new Vector(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
+    public static final Vector MAX = new Vector(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
 
     public double component(int which) {
         return switch (which) {
@@ -62,16 +65,12 @@ public record Vector(double x, double y, double z) {
         return sqrt(square());
     }
 
-    public Vector div(double f) {
-        return new Vector(x / f, y / f, z / f);
-    }
-
     public double mag() {
         return sqrt(square());
     }
 
     public Vector normalize() {
-        return div(mag());
+        return mul(1.0 / mag());
     }
 
     public boolean isOpposite(Vector other) {
@@ -111,11 +110,24 @@ public record Vector(double x, double y, double z) {
      * @see <a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html#metal/fuzzyreflection">doc</a>
      */
     public Vector reflect(Vector normal, double fuzz) {
-        Vector result = minus(normal.mul(2.0 * dot(normal)));
+        double d = 2.0 * dot(normal);
+        Mector m = new Mector(this).plusTimes(normal, -d);
         if (fuzz > 0.0) {
-            result = result.plus(randomUnitVector().mul(fuzz));
+            m.plusTimes(randomUnitVector(), fuzz);
         }
-        return result;
+        return m.toVector();
+    }
+
+    public Vector rotateY(double sin, double cos) {
+        double newX = cos * x - sin * z;
+        double newZ = cos * z + sin * x;
+        return vec(newX, y, newZ);
+    }
+
+    public boolean equalish(Vector other) {
+        return abs(x - other.x) < 0.000001
+                && abs(y - other.y) < 0.000001
+                && abs(z - other.z) < 0.000001;
     }
 
     public static Vector vec(double x, double y, double z) {
diff --git a/src/main/resources/earth.jpg b/src/main/resources/earth.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..908c1606a1c794043f95fe09730653f229b5aec1
GIT binary patch
literal 161345
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
WTWF0gM|xJ0UjX8V)?(b>>Hh&7Ux>;8

literal 0
HcmV?d00001

